/*
 * File: app/view/laboresGrid.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.laboresGrid', {
    extend: 'Ext.container.Container',
    alias: 'widget.laboresgrid',

    requires: [
        'MyApp.view.establecimientosGridViewModel13',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Date',
        'Ext.grid.column.Number',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'laboresgrid'
    },
    height: 250,
    id: 'laboresGrid',
    itemId: 'laboresGrid',
    scrollable: 'true',
    width: 400,
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'gridpanel',
            flex: 0,
            dock: 'top',
            id: 'laboresListGrid',
            itemId: 'laboresListGrid',
            rtl: false,
            scrollable: 'true',
            style: 'padding: 5px 5px 5px 5px;\ncolor: #424242;',
            bodyStyle: 'color: #424242;',
            glyph: 'xf196@FontAwesome',
            iconAlign: 'left',
            title: 'Labores',
            titleAlign: 'left',
            split: true,
            autoLoad: true,
            bufferedRenderer: false,
            forceFit: true,
            store: 'Labores',
            viewConfig: {
                border: 0,
                preserveScrollOnRefresh: true
            },
            columns: [
                {
                    xtype: 'datecolumn',
                    dataIndex: 'fecha',
                    text: 'Fecha'
                },
                {
                    xtype: 'numbercolumn',
                    renderer: function(value, record, rowIndex) {
                        var store = Ext.getStore('Tareas');
                        console.log(value);
                        var num = store.find('codigo',value);
                        if (num==-1) {return '...';}
                        else { return store.getAt(num).get('descripcion');}
                    },
                    dataIndex: 'cod_tarea',
                    text: 'Cod Tarea',
                    format: '00'
                }
            ]
        },
        {
            xtype: 'button',
            flex: 0,
            id: 'agregalaborBtn',
            itemId: 'agregalaborBtn',
            margin: '30px',
            glyph: 'xf234@FontAwesome',
            iconAlign: 'top',
            params: 'laboresForm',
            text: 'Agregar Labores',
            listeners: {
                click: 'onAgregalaborBtnClick'
            }
        }
    ],
    listeners: {
        afterrender: 'onLaboresGridAfterRender'
    },

    onAgregalaborBtnClick: function(button, e, eOpts) {
        var grid_panel = Ext.ComponentQuery.query('#laboresGrid')[0];
        f_crud.form_open(grid_panel,'ADD');
    },

    onLaboresGridAfterRender: function(component, eOpts) {
                debugger;
                console.log(this);
                this.store_name = 'Labores';
                this.model_name = 'MyApp.model.Labores';
                this.form_name  = 'MyApp.view.laboresForm';
                var store 		  = Ext.getStore(this.store_name);
                var st_insumos    = Ext.getStore('Labores_insumos');
                var st_personal   = Ext.getStore('Labores_personal');
                var st_maquinaria = Ext.getStore('Labores_maquinaria');
                this.form_store_array = [store,st_insumos,st_personal,st_maquinaria];
    }

});